{"version":3,"file":"static/js/518.45503f63.chunk.js","mappings":"+SAEMA,EAAM,mCAML,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAAwBC,EAAxB,+BAA6B,EAA7B,UACoBC,EAAAA,EAAAA,GAAM,mBAAoB,CAAEC,OAAQ,CAAEC,QAASL,EAAKE,KAAAA,KADxE,cACGI,EADH,yBAEIA,EAASC,KAAKC,SAFlB,mEAMA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA8BC,EAAOR,GAArC,wFACoBC,EAAAA,EAAAA,GAAM,gBAAiB,CAAEC,OAAQ,CAAEC,QAASL,EAAKE,KAAAA,EAAMQ,MAAAA,KAD3E,cACGJ,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAKA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BC,GAA1B,wFACoBT,EAAAA,EAAAA,GAAM,UAAD,OAAWS,GAAM,CAAER,OAAQ,CAAEC,QAASL,KAD/D,cACGM,EADH,yBAEIA,EAASC,MAFb,kEAKA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAwBD,GAAxB,wFACoBT,EAAAA,EAAAA,GAAM,UAAD,OAAWS,EAAX,YAAyB,CAAER,OAAQ,CAAEC,QAASL,KADvE,cACGM,EADH,yBAEIA,EAASC,KAAKO,MAFlB,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BH,GAA1B,wFACoBT,EAAAA,EAAAA,GAAM,UAAD,OAAWS,EAAX,YAAyB,CAAER,OAAQ,CAAEC,QAASL,KADvE,cACGM,EADH,yBAEIA,EAASC,KAAKC,SAFlB,kEAzBPL,EAAAA,EAAAA,SAAAA,QADiB,+B,2HCCJa,EAAS,WAElB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,YAA5B,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAYL,EAAaM,IAAI,SAC7BC,GAAWC,EAAAA,EAAAA,MAenB,OAbAC,EAAAA,EAAAA,YAAU,WACJJ,IACAd,EAAAA,EAAAA,IAAec,EAAW,GACzBK,KAAKN,EAET,GAAE,CAACC,KASA,iCACI,kBAAMM,SARhB,SAAsBC,GACpBA,EAAGC,iBACH,IAAMrB,EAAQoB,EAAGE,cAAcC,UAAUC,MACzCf,EAAgB,CAACT,MAAAA,GAClB,EAIS,WACI,kBAAOyB,KAAK,eACZ,mBAAQC,KAAK,SAAb,uBAGHf,IAAW,iCACR,wBACKA,EAAOgB,KAAI,SAAAC,GACR,OACI,yBACI,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAM1B,IAAM4B,MAAO,CAACC,KAAK,GAAD,OAAKhB,EAASiB,UAAd,OAAyBjB,EAASkB,SAAvE,SAAmFL,EAAMM,SADpFN,EAAM1B,GAGtB,OAET,SAAC,KAAD,SAIX,C","sources":["Services/MoviesApi.js","components/Pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\"\n\nconst KEY = '68e3775246544a4b01e0cb7df43b357c'\nconst BASE_URL = 'https://api.themoviedb.org/3/'\naxios.defaults.baseURL = BASE_URL\n\n\n\nexport async function dataLoad(page=1) {\n    const response = await axios(\"trending/all/day\", { params: { api_key: KEY, page } })\n    return response.data.results\n    \n}\n\nexport async function getSearchFilms(query, page) {\n    const response = await axios('/search/movie', { params: { api_key: KEY, page, query } })\n    return response.data.results\n}\n\nexport async function getDetails(id) {\n    const response = await axios(`/movie/${id}`, { params: { api_key: KEY, } })\n    return response.data\n}\n\nexport async function getCasts(id) {\n    const response = await axios(`/movie/${id}/credits`, { params: { api_key: KEY, } })\n    return response.data.cast\n}\n\nexport async function getReviews(id) {\n    const response = await axios(`/movie/${id}/reviews`, { params: { api_key: KEY, } })\n    return response.data.results\n}\n\n","import React, { useEffect, useState } from 'react'\nimport { Link, Outlet, useLocation, useSearchParams } from 'react-router-dom'\nimport { getSearchFilms } from 'Services/MoviesApi'\n\nexport const Movies = () => {\n\n    const [searchParams, setSearchParams] = useSearchParams()\n    const [movies, setMovies] = useState()\n    const getParams = searchParams.get('query')\n    const location = useLocation()\n\n  useEffect(() => {\n        getParams && (\n        getSearchFilms(getParams, 1)\n        .then(setMovies)\n        )\n    }, [getParams])\n  \n  function handleSubmit(ev) {\n    ev.preventDefault()\n    const query = ev.currentTarget.searchInp.value\n    setSearchParams({query})\n  }\n\n  return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input name='searchInp' />\n                <button type='submit'>Search</button>\n            </form>\n\n            {movies && (<>\n                <ul>\n                    {movies.map(movie => {\n                        return (\n                            <li key={movie.id}>\n                                <Link to={`${movie.id}`} state={{back: `${location.pathname}${location.search}`}}>{movie.title}</Link>\n                            </li>)\n                    })}\n            </ul>\n            <Outlet/>\n            </>\n    )}</>\n    )\n}\n"],"names":["KEY","dataLoad","page","axios","params","api_key","response","data","results","getSearchFilms","query","getDetails","id","getCasts","cast","getReviews","Movies","useSearchParams","searchParams","setSearchParams","useState","movies","setMovies","getParams","get","location","useLocation","useEffect","then","onSubmit","ev","preventDefault","currentTarget","searchInp","value","name","type","map","movie","to","state","back","pathname","search","title"],"sourceRoot":""}